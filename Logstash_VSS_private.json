{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"Base_Name": {
			"type": "string"
		},
		"vnet_RG_Name": {
			"type": "string"
		},
		"vnet_Name": {
			"type": "string"
		},
		"subnet_Name": {
			"type": "string"
		},
		"Autoscale_Min": {
			"type": "int",
			"defaultValue": 1
		},
		"Autoscale_Max": {
			"type": "int",
			"defaultValue": 10
		},
		"AdminUserName": {
			"type": "string",
			"defaultValue": "logstash"
		},
		"AdminPassword": {
			"type": "securestring"
		},
		"workspaceId": {
			"type": "string",
      "defaultValue": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', 'CMMC-LA-EUS2-SENTINEL-PROD')).customerId]
		},
		"workspaceKey": {
			"type": "string"
		}
	},
	"variables": {
		"vmss_Name": "[concat(parameters('Base_Name'), '-vmss')]",
		"storage_name": "[tolower(concat(parameters('Base_Name'), 'diag'))]",
		"autoscale_Name": "[concat(parameters('Base_Name'),'-autoscale')]",
		"loadbalancer_Name": "[concat(parameters('Base_Name'),'-lb')]",
		"maxPortRange": "[if(lessOrEquals(parameters('Autoscale_Max'), 9), '5000', '500')]",
		"cloudinit": "[concat('#cloud-config\n package_update: true\n package_upgrade: true\n packages:\n  - default-jre\n runcmd:\n  - while ( ! (find /var/log/azure/Microsoft.EnterpriseCloud.Monitoring.OmsAgentForLinux/extension.log | xargs grep \"Enable,success,0,Enable succeeded\")); do sleep 5; done\n  - sudo apt-get update\n  - sudo apt-get install -y apt-transport-https\n  - wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\n  - echo \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list\n  - sudo apt-get update\n  - sudo apt-get install -y default-jre\n  - sudo echo \"root         soft    nofile         65536\" >> /etc/security/limits.conf\n  - sudo echo \"root         hard    nofile         65536\" >> /etc/security/limits.conf\n  - sudo echo \"*         soft    nofile         65536\" >> /etc/security/limits.conf\n  - sudo echo \"*         hard    nofile         65536\" >> /etc/security/limits.conf\n  - sudo apt-get install -y logstash\n  - sudo /usr/share/logstash/bin/logstash-plugin install logstash-output-syslog\n  - sudo /usr/share/logstash/bin/logstash-plugin update\n  - wget -q https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/Logstash-VMSS/logstash.conf -O /etc/logstash/conf.d/logstash.conf\n  - echo \"update this line with wget -q https://sourceURL -O /etc/logstash/pipelines.yml if you have a custom pipelines file\"\n  - sudo systemctl start logstash.service\n  - sudo wget https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_installer.py&&sudo python cef_installer.py ', parameters('workspaceId'), ' ', parameters('workspaceKey'))]"
	},
	"resources": [{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2019-06-01",
			"name": "[variables('storage_name')]",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"kind": "StorageV2",
			"properties": {
				"supportsHttpsTrafficOnly": true
			}
		},
		{
			"type": "Microsoft.Network/loadBalancers",
			"apiVersion": "2019-09-01",
			"name": "[variables('loadbalancer_Name')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [],
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"frontendIPConfigurations": [{
					"name": "LoadBalancerFrontEnd",
					"properties": {
						"subnet": {
							"id": "[resourceId(parameters('vnet_RG_Name'), 'Microsoft.Network/virtualNetworks/Subnets', parameters('vnet_Name'), parameters('subnet_Name'))]"
						},
						"privateIPAllocationMethod": "Dynamic",
						"privateIPAddressVersion": "IPv4"
					}
				}],
				"backendAddressPools": [{
					"name": "bepool",
					"properties": {}
				}],
				"loadBalancingRules": [{
						"name": "LBSyslogTCPRule",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
							},
							"frontendPort": 5514,
							"backendPort": 5514,
							"enableFloatingIP": false,
							"idleTimeoutInMinutes": 5,
							"protocol": "TCP",
							"enableTcpReset": false,
							"loadDistribution": "Default",
							"disableOutboundSnat": false,
							"backendAddressPool": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/backendAddressPools/bepool')]"
							},
							"probe": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/probes/tcpProbe')]"
							}
						}
					},
					{
						"name": "LBSyslogUDPRule",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
							},
							"frontendPort": 5514,
							"backendPort": 5514,
							"enableFloatingIP": false,
							"idleTimeoutInMinutes": 5,
							"protocol": "Udp",
							"enableTcpReset": false,
							"loadDistribution": "Default",
							"disableOutboundSnat": false,
							"backendAddressPool": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/backendAddressPools/bepool')]"
							},
							"probe": {
								"id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/probes/tcpProbe')]"
							}
						}
					}
				],
				"probes": [{
					"name": "tcpProbe",
					"properties": {
						"protocol": "Tcp",
						"port": 5514,
						"intervalInSeconds": 5,
						"numberOfProbes": 2
					}
				}],
				"inboundNatRules": [],
				"outboundRules": [],
				"inboundNatPools": []
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachineScaleSets",
			"apiVersion": "2019-03-01",
			"name": "[variables('vmss_Name')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))]",
				"[resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name'))]"
			],
			"sku": {
				"name": "Standard_B8ms",
				"tier": "Standard",
				"capacity": "[parameters('Autoscale_Min')]"
			},
			"properties": {
				"singlePlacementGroup": true,
				"upgradePolicy": {
					"mode": "Manual"
				},
				"virtualMachineProfile": {
					"osProfile": {
						"computerNamePrefix": "[parameters('Base_Name')]",
						"adminUsername": "[parameters('AdminUserName')]",
						"adminPassword": "[parameters('AdminPassword')]",
						"linuxConfiguration": {
							"disablePasswordAuthentication": false,
							"provisionVMAgent": true
						},
						"secrets": [],
						"customData": "[base64(variables('cloudinit'))]"
					},
					"storageProfile": {
						"osDisk": {
							"createOption": "FromImage",
							"caching": "ReadWrite",
							"managedDisk": {
								"storageAccountType": "Premium_LRS"
							},
							"diskSizeGB": 32
						},
						"imageReference": {
							"publisher": "Canonical",
							"offer": "UbuntuServer",
							"sku": "18.04-LTS",
							"version": "latest"
						}
					},
					"networkProfile": {
						"networkInterfaceConfigurations": [{
							"name": "[concat(parameters('Base_Name'), '-nic')]",
							"properties": {
								"primary": true,
								"enableAcceleratedNetworking": false,
								"dnsSettings": {
									"dnsServers": []
								},
								"enableIPForwarding": false,
								"ipConfigurations": [{
									"name": "[concat(parameters('Base_Name'), '-ipConfig')]",
									"properties": {
										"subnet": {
											"id": "[resourceId(parameters('vnet_RG_Name'), 'Microsoft.Network/virtualNetworks/Subnets', parameters('vnet_Name'), parameters('subnet_Name'))]"
										},
										"privateIPAddressVersion": "IPv4",
										"loadBalancerBackendAddressPools": [{
											"id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/backendAddressPools/bepool')]"
										}]
									}
								}],
								"publicIpAddressConfiguration": {
									"name": "pub1",
									"sku": {
										"name": "Standard"
									},
									"properties": {
										"idleTimeoutInMinutes": 15
									}
								}
							}
						}]
					},
					"diagnosticsProfile": {
						"bootDiagnostics": {
							"enabled": true,
							"storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))).primaryEndpoints.blob]"
						}
					},
					"extensionProfile": {
						"extensions": [{
								"type": "extensions",
								"name": "OMSExtension",
								"location": "[resourceGroup().location]",
								"properties": {
									"publisher": "Microsoft.EnterpriseCloud.Monitoring",
									"type": "OmsAgentForLinux",
									"typeHandlerVersion": "1.4",
									"autoUpgradeMinorVersion": true,
									"settings": {
										"workspaceId": "[parameters('workspaceId')]",
										"stopOnMultipleConnections": "true"
									},
									"protectedSettings": {
										"workspaceKey": "[parameters('workspaceKey')]"
									}
								}
							},
							{
								"type": "extensions",
								"name": "DependencyAgentLinux",
								"location": "[resourceGroup().location]",
								"properties": {
									"publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
									"type": "DependencyAgentLinux",
									"typeHandlerVersion": "9.5",
									"autoUpgradeMinorVersion": true
								}
							}
						]
					},
					"priority": "Regular"
				},
				"overprovision": true,
				"doNotRunExtensionsOnOverprovisionedVMs": false,
				"platformFaultDomainCount": 5
			}
		},
		{
			"type": "microsoft.insights/autoscalesettings",
			"apiVersion": "2014-04-01",
			"name": "[variables('autoscale_Name')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]"
			],
			"properties": {
				"profiles": [{
					"name": "Profile1",
					"capacity": {
						"minimum": "[parameters('Autoscale_Min')]",
						"maximum": "[parameters('Autoscale_Max')]",
						"default": "[parameters('Autoscale_Min')]"
					},
					"rules": [{
							"metricTrigger": {
								"metricName": "Percentage CPU",
								"metricNamespace": "",
								"metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]",
								"timeGrain": "PT1M",
								"statistic": "Average",
								"timeWindow": "PT5M",
								"timeAggregation": "Average",
								"operator": "GreaterThan",
								"threshold": 75,
								"dimensions": [],
								"dividePerInstance": false
							},
							"scaleAction": {
								"direction": "Increase",
								"type": "ChangeCount",
								"value": "1",
								"cooldown": "PT1M"
							}
						},
						{
							"metricTrigger": {
								"metricName": "Percentage CPU",
								"metricNamespace": "",
								"metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]",
								"timeGrain": "PT1M",
								"statistic": "Average",
								"timeWindow": "PT5M",
								"timeAggregation": "Average",
								"operator": "LessThan",
								"threshold": 25,
								"dimensions": [],
								"dividePerInstance": false
							},
							"scaleAction": {
								"direction": "Decrease",
								"type": "ChangeCount",
								"value": "1",
								"cooldown": "PT1M"
							}
						}
					]
				}],
				"enabled": true,
				"name": "[concat(parameters('Base_Name'), '-autoscale')]",
				"targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]"
			}
		}
	],
	"outputs": {
		"b64customData": {
			"type": "string",
			"value": "[base64(variables('cloudinit'))]"
		},
		"customData": {
			"type": "string",
			"value": "[variables('cloudinit')]"
		},
		"osprofile": {
			"type": "object",
			"value": "[reference(variables('vmss_Name'))]"
		}
	}
}
